@prefix code: <https://code.described.at/> .
@prefix p: <https://pipeline.described.at/> .

<http://example.org/pipeline#pipeline> a p:Pipeline ;
    p:steps [ p:stepList ( <http://example.org/pipeline#readFile> <http://example.org/pipeline#parseCsv> <http://example.org/pipeline#forEach> <http://example.org/pipeline#serializeJson> ) ] ;
    p:variables [ p:variable [ p:name "filename" ;
                    p:value "examples/test.csv" ;
                    a p:Variable ] ] .

<http://example.org/pipeline#duplicate> code:implementedBy [ a code:EcmaScript ;
            code:link <file:steps/duplicate.js> ] .

<http://example.org/pipeline#forEach> code:arguments ( <http://example.org/pipeline#subPipeline> ) ;
    code:implementedBy [ a code:EcmaScript ;
            code:link <file:..#forEach> ] .

<http://example.org/pipeline#parseCsv> code:implementedBy [ a code:EcmaScript ;
            code:link <file:steps/parseCsv.js> ] .

<http://example.org/pipeline#readFile> code:arguments ( "${filename}"^^code:EcmaScriptTemplateLiteral ) ;
    code:implementedBy [ a code:EcmaScript ;
            code:link <node:fs#createReadStream> ] .

<http://example.org/pipeline#serializeJson> code:implementedBy [ a code:EcmaScript ;
            code:link <file:steps/serializeJson.js> ] .

<http://example.org/pipeline#subPipeline> a p:Pipeline, p:WritablePipeline ;
    p:steps [ p:stepList ( <http://example.org/pipeline#duplicate> ) ] .

